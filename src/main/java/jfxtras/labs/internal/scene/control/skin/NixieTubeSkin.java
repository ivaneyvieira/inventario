package jfxtras.labs.internal.scene.control.skin;

import com.sun.javafx.scene.control.skin.SkinBase;
import javafx.beans.property.ObjectProperty;
import javafx.collections.ObservableList;
import javafx.geometry.Bounds;
import javafx.geometry.Insets;
import javafx.scene.Group;
import javafx.scene.Node;
import javafx.scene.effect.BlurType;
import javafx.scene.effect.DropShadow;
import javafx.scene.effect.InnerShadow;
import javafx.scene.paint.Color;
import javafx.scene.paint.CycleMethod;
import javafx.scene.paint.LinearGradient;
import javafx.scene.paint.Stop;
import javafx.scene.shape.ClosePath;
import javafx.scene.shape.CubicCurveTo;
import javafx.scene.shape.Ellipse;
import javafx.scene.shape.FillRule;
import javafx.scene.shape.LineTo;
import javafx.scene.shape.MoveTo;
import javafx.scene.shape.Path;
import javafx.scene.shape.Rectangle;
import javafx.scene.shape.Shape;
import jfxtras.labs.internal.scene.control.behavior.NixieTubeBehavior;
import jfxtras.labs.scene.control.gauge.NixieTube;

public class NixieTubeSkin
  extends SkinBase<NixieTube, NixieTubeBehavior>
{
  private NixieTube control;
  private boolean isDirty;
  private boolean initialized;
  private Path hatch;
  private Group numbers;
  private Path zero;
  private Path one;
  private Path two;
  private Path three;
  private Path four;
  private Path five;
  private Path six;
  private Path seven;
  private Path eight;
  private Path nine;
  private Group tube;
  private Rectangle leftLight;
  private Rectangle rightLight;
  private DropShadow hatchGlow;
  private InnerShadow innerGlow;
  private DropShadow glow;
  
  public NixieTubeSkin(NixieTube paramNixieTube)
  {
    super(paramNixieTube, new NixieTubeBehavior(paramNixieTube));
    this.control = paramNixieTube;
    this.initialized = false;
    this.isDirty = false;
    this.zero = new Path();
    this.one = new Path();
    this.two = new Path();
    this.three = new Path();
    this.four = new Path();
    this.five = new Path();
    this.six = new Path();
    this.seven = new Path();
    this.eight = new Path();
    this.nine = new Path();
    this.hatch = new Path();
    this.numbers = new Group();
    this.tube = new Group();
    this.leftLight = new Rectangle();
    this.rightLight = new Rectangle();
    init();
  }
  
  private void init()
  {
    if (((this.control.getPrefWidth() < 0.0D ? 1 : 0) | (this.control.getPrefHeight() < 0.0D ? 1 : 0)) != 0) {
      this.control.setPrefSize(86.0D, 145.0D);
    }
    registerChangeListener(this.control.prefWidthProperty(), "PREF_WIDTH");
    registerChangeListener(this.control.prefHeightProperty(), "PREF_HEIGHT");
    registerChangeListener(this.control.glowColorProperty(), "GLOW_COLOR");
    registerChangeListener(this.control.numberProperty(), "NUMBER");
    createGlows();
    this.initialized = true;
    repaint();
    setNumber();
  }
  
  protected void handleControlPropertyChanged(String paramString)
  {
    super.handleControlPropertyChanged(paramString);
    if ("GLOW_COLOR".equals(paramString))
    {
      createGlows();
      setNumber();
      this.hatch.setEffect(this.hatchGlow);
    }
    else if ("NUMBER".equals(paramString))
    {
      setNumber();
    }
    else if ("PREF_WIDTH".equals(paramString))
    {
      repaint();
    }
    else if ("PREF_HEIGHT".equals(paramString))
    {
      repaint();
    }
  }
  
  public final void repaint()
  {
    this.isDirty = true;
    requestLayout();
  }
  
  public void layoutChildren()
  {
    if (!this.isDirty) {
      return;
    }
    if (!this.initialized) {
      init();
    }
    if (this.control.getScene() != null)
    {
      drawNumbers();
      drawTube();
      getChildren().setAll(new Node[] { this.numbers, this.tube });
    }
    this.isDirty = false;
    super.layoutChildren();
  }
  
  public final NixieTube getSkinnable()
  {
    return this.control;
  }
  
  public final void dispose()
  {
    this.control = null;
  }
  
  protected double computePrefWidth(double paramDouble)
  {
    double d = 86.0D;
    if (paramDouble != -1.0D) {
      d = Math.max(0.0D, paramDouble - getInsets().getLeft() - getInsets().getRight());
    }
    return super.computePrefWidth(d);
  }
  
  protected double computePrefHeight(double paramDouble)
  {
    double d = 145.0D;
    if (paramDouble != -1.0D) {
      d = Math.max(0.0D, paramDouble - getInsets().getTop() - getInsets().getBottom());
    }
    return super.computePrefWidth(d);
  }
  
  private final void switchOffAllNumbers()
  {
    Color localColor = Color.color(0.2D, 0.2D, 0.2D, 0.6D);
    this.zero.setEffect(null);
    this.zero.setStroke(localColor);
    this.zero.setStrokeWidth(1.0D);
    this.one.setEffect(null);
    this.one.setStroke(localColor);
    this.one.setStrokeWidth(1.0D);
    this.two.setEffect(null);
    this.two.setStroke(localColor);
    this.two.setStrokeWidth(1.0D);
    this.three.setEffect(null);
    this.three.setStroke(localColor);
    this.three.setStrokeWidth(1.0D);
    this.four.setEffect(null);
    this.four.setStroke(localColor);
    this.four.setStrokeWidth(1.0D);
    this.five.setEffect(null);
    this.five.setStroke(localColor);
    this.five.setStrokeWidth(1.0D);
    this.six.setEffect(null);
    this.six.setStroke(localColor);
    this.six.setStrokeWidth(1.0D);
    this.seven.setEffect(null);
    this.seven.setStroke(localColor);
    this.seven.setStrokeWidth(1.0D);
    this.eight.setEffect(null);
    this.eight.setStroke(localColor);
    this.eight.setStrokeWidth(1.0D);
    this.nine.setEffect(null);
    this.nine.setStroke(localColor);
    this.nine.setStrokeWidth(1.0D);
  }
  
  private final void setNumber()
  {
    switchOffAllNumbers();
    double d = 0.023255814D * this.control.getPrefWidth();
    Color localColor = Color.color(0.2D, 0.2D, 0.2D, 1.0D);
    switch (this.control.getNumber())
    {
    case 0: 
      this.zero.setStroke(localColor);
      this.zero.setEffect(this.glow);
      this.zero.setStrokeWidth(d);
      break;
    case 1: 
      this.one.setStroke(localColor);
      this.one.setEffect(this.glow);
      this.one.setStrokeWidth(d);
      break;
    case 2: 
      this.two.setStroke(localColor);
      this.two.setEffect(this.glow);
      this.two.setStrokeWidth(d);
      break;
    case 3: 
      this.three.setStroke(localColor);
      this.three.setEffect(this.glow);
      this.three.setStrokeWidth(d);
      break;
    case 4: 
      this.four.setStroke(localColor);
      this.four.setEffect(this.glow);
      this.four.setStrokeWidth(d);
      break;
    case 5: 
      this.five.setStroke(localColor);
      this.five.setEffect(this.glow);
      this.five.setStrokeWidth(d);
      break;
    case 6: 
      this.six.setStroke(localColor);
      this.six.setEffect(this.glow);
      this.six.setStrokeWidth(d);
      break;
    case 7: 
      this.seven.setStroke(localColor);
      this.seven.setEffect(this.glow);
      this.seven.setStrokeWidth(d);
      break;
    case 8: 
      this.eight.setStroke(localColor);
      this.eight.setEffect(this.glow);
      this.eight.setStrokeWidth(d);
      break;
    case 9: 
      this.nine.setStroke(localColor);
      this.nine.setEffect(this.glow);
      this.nine.setStrokeWidth(d);
    }
  }
  
  private final void createGlows()
  {
    double d1 = this.control.getPrefWidth();
    double d2 = this.control.getPrefHeight();
    this.innerGlow = new InnerShadow();
    this.innerGlow.setWidth(0.18D * d1);
    this.innerGlow.setHeight(0.18D * d1);
    this.innerGlow.setRadius(0.15D * d1);
    this.innerGlow.setColor(this.control.getGlowColor().brighter().brighter());
    this.innerGlow.setBlurType(BlurType.GAUSSIAN);
    this.innerGlow.inputProperty().set(null);
    this.glow = new DropShadow();
    this.glow.setSpread(0.006D * d1);
    this.glow.setRadius(0.15D * d1);
    this.glow.setColor(this.control.getGlowColor());
    this.glow.setBlurType(BlurType.GAUSSIAN);
    this.glow.inputProperty().set(this.innerGlow);
    this.hatchGlow = new DropShadow();
    this.hatchGlow.setRadius(0.1D * d1);
    this.hatchGlow.setColor(Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.6D));
    this.hatch.setFill(Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.05D));
    this.leftLight.setFill(new LinearGradient(0.011627906976744186D * d1, 0.32413793103448274D * d2, 0.011627906976744245D * d1, 0.903448275862069D * d2, false, CycleMethod.NO_CYCLE, new Stop[] { new Stop(0.0D, Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.1D)), new Stop(0.5D, Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.4D)), new Stop(1.0D, Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.1D)) }));
    this.rightLight.setFill(new LinearGradient(d1, 0.32413793103448274D * d2, d1, 0.903448275862069D * d2, false, CycleMethod.NO_CYCLE, new Stop[] { new Stop(0.0D, Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.1D)), new Stop(0.5D, Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.4D)), new Stop(1.0D, Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.1D)) }));
  }
  
  private final void drawNumbers()
  {
    double d1 = this.control.getPrefWidth();
    double d2 = this.control.getPrefHeight();
    this.numbers.getChildren().clear();
    Rectangle localRectangle = new Rectangle(0.0D, 0.0D, d1, d2);
    localRectangle.setOpacity(0.0D);
    localRectangle.setStroke(null);
    this.numbers.getChildren().add(localRectangle);
    createGlows();
    Color localColor = Color.color(0.2D, 0.2D, 0.2D, 0.6D);
    this.one.getElements().clear();
    this.one.setFillRule(FillRule.EVEN_ODD);
    this.one.getElements().add(new MoveTo(0.4883720930232558D * d1, 0.296551724137931D * d2));
    this.one.getElements().add(new CubicCurveTo(0.4883720930232558D * d1, 0.2896551724137931D * d2, 0.4883720930232558D * d1, 0.2827586206896552D * d2, 0.5D * d1, 0.2827586206896552D * d2));
    this.one.getElements().add(new CubicCurveTo(0.5116279069767442D * d1, 0.2827586206896552D * d2, 0.5232558139534884D * d1, 0.2896551724137931D * d2, 0.5232558139534884D * d1, 0.296551724137931D * d2));
    this.one.getElements().add(new CubicCurveTo(0.5232558139534884D * d1, 0.296551724137931D * d2, 0.5232558139534884D * d1, 0.8482758620689655D * d2, 0.5232558139534884D * d1, 0.8482758620689655D * d2));
    this.one.getElements().add(new CubicCurveTo(0.5232558139534884D * d1, 0.8551724137931035D * d2, 0.5116279069767442D * d1, 0.8620689655172413D * d2, 0.5D * d1, 0.8689655172413793D * d2));
    this.one.getElements().add(new CubicCurveTo(0.4883720930232558D * d1, 0.8689655172413793D * d2, 0.4883720930232558D * d1, 0.8551724137931035D * d2, 0.4883720930232558D * d1, 0.8482758620689655D * d2));
    this.one.getElements().add(new CubicCurveTo(0.4883720930232558D * d1, 0.8482758620689655D * d2, 0.4883720930232558D * d1, 0.296551724137931D * d2, 0.4883720930232558D * d1, 0.296551724137931D * d2));
    this.one.getElements().add(new ClosePath());
    this.one.setFill(null);
    this.one.setStroke(localColor);
    this.zero.getElements().clear();
    this.zero.setFillRule(FillRule.EVEN_ODD);
    this.zero.getElements().add(new MoveTo(0.2441860465116279D * d1, 0.5862068965517241D * d2));
    this.zero.getElements().add(new CubicCurveTo(0.2441860465116279D * d1, 0.43448275862068964D * d2, 0.36046511627906974D * d1, 0.31724137931034485D * d2, 0.5116279069767442D * d1, 0.31724137931034485D * d2));
    this.zero.getElements().add(new CubicCurveTo(0.6627906976744186D * d1, 0.31724137931034485D * d2, 0.7790697674418605D * d1, 0.43448275862068964D * d2, 0.7790697674418605D * d1, 0.5862068965517241D * d2));
    this.zero.getElements().add(new CubicCurveTo(0.7790697674418605D * d1, 0.7310344827586207D * d2, 0.6627906976744186D * d1, 0.8482758620689655D * d2, 0.5116279069767442D * d1, 0.8482758620689655D * d2));
    this.zero.getElements().add(new CubicCurveTo(0.36046511627906974D * d1, 0.8482758620689655D * d2, 0.2441860465116279D * d1, 0.7310344827586207D * d2, 0.2441860465116279D * d1, 0.5862068965517241D * d2));
    this.zero.getElements().add(new ClosePath());
    this.zero.setFill(null);
    this.zero.setStroke(localColor);
    this.two.getElements().clear();
    this.two.setFillRule(FillRule.EVEN_ODD);
    this.two.getElements().add(new MoveTo(0.23255813953488372D * d1, 0.47586206896551725D * d2));
    this.two.getElements().add(new CubicCurveTo(0.23255813953488372D * d1, 0.47586206896551725D * d2, 0.23255813953488372D * d1, 0.43448275862068964D * d2, 0.23255813953488372D * d1, 0.42758620689655175D * d2));
    this.two.getElements().add(new CubicCurveTo(0.2441860465116279D * d1, 0.4068965517241379D * d2, 0.27906976744186046D * d1, 0.3793103448275862D * d2, 0.3023255813953488D * d1, 0.36551724137931035D * d2));
    this.two.getElements().add(new CubicCurveTo(0.32558139534883723D * d1, 0.35172413793103446D * d2, 0.3488372093023256D * d1, 0.33793103448275863D * d2, 0.4069767441860465D * d1, 0.32413793103448274D * d2));
    this.two.getElements().add(new CubicCurveTo(0.43023255813953487D * d1, 0.31724137931034485D * d2, 0.47674418604651164D * d1, 0.31724137931034485D * d2, 0.4883720930232558D * d1, 0.31724137931034485D * d2));
    this.two.getElements().add(new CubicCurveTo(0.5697674418604651D * d1, 0.31724137931034485D * d2, 0.6162790697674418D * d1, 0.32413793103448274D * d2, 0.627906976744186D * d1, 0.3310344827586207D * d2));
    this.two.getElements().add(new CubicCurveTo(0.6744186046511628D * d1, 0.33793103448275863D * d2, 0.686046511627907D * d1, 0.3448275862068966D * d2, 0.7093023255813954D * d1, 0.3586206896551724D * d2));
    this.two.getElements().add(new CubicCurveTo(0.7441860465116279D * d1, 0.3793103448275862D * d2, 0.7674418604651163D * d1, 0.41379310344827586D * d2, 0.7674418604651163D * d1, 0.4482758620689655D * d2));
    this.two.getElements().add(new CubicCurveTo(0.7674418604651163D * d1, 0.496551724137931D * d2, 0.7441860465116279D * d1, 0.5241379310344828D * d2, 0.686046511627907D * d1, 0.5448275862068965D * d2));
    this.two.getElements().add(new CubicCurveTo(0.6627906976744186D * d1, 0.5586206896551724D * d2, 0.5813953488372093D * d1, 0.5724137931034483D * d2, 0.5348837209302325D * d1, 0.5793103448275863D * d2));
    this.two.getElements().add(new CubicCurveTo(0.4883720930232558D * d1, 0.5862068965517241D * d2, 0.45348837209302323D * d1, 0.6D * d2, 0.45348837209302323D * d1, 0.6D * d2));
    this.two.getElements().add(new CubicCurveTo(0.36046511627906974D * d1, 0.6344827586206897D * d2, 0.29069767441860467D * d1, 0.6896551724137931D * d2, 0.2558139534883721D * d1, 0.7448275862068966D * d2));
    this.two.getElements().add(new CubicCurveTo(0.2441860465116279D * d1, 0.7724137931034483D * d2, 0.23255813953488372D * d1, 0.8482758620689655D * d2, 0.23255813953488372D * d1, 0.8482758620689655D * d2));
    this.two.getElements().add(new LineTo(0.7906976744186046D * d1, 0.8482758620689655D * d2));
    this.two.setFill(null);
    this.two.setStroke(localColor);
    this.three.getElements().clear();
    this.three.setFillRule(FillRule.EVEN_ODD);
    this.three.getElements().add(new MoveTo(0.23255813953488372D * d1, 0.31724137931034485D * d2));
    this.three.getElements().add(new LineTo(0.7674418604651163D * d1, 0.31724137931034485D * d2));
    this.three.getElements().add(new LineTo(0.7674418604651163D * d1, 0.3310344827586207D * d2));
    this.three.getElements().add(new LineTo(0.5232558139534884D * d1, 0.5172413793103449D * d2));
    this.three.getElements().add(new CubicCurveTo(0.5232558139534884D * d1, 0.5172413793103449D * d2, 0.5697674418604651D * d1, 0.5241379310344828D * d2, 0.6046511627906976D * d1, 0.5310344827586206D * d2));
    this.three.getElements().add(new CubicCurveTo(0.6744186046511628D * d1, 0.5448275862068965D * d2, 0.7209302325581395D * d1, 0.593103448275862D * d2, 0.7209302325581395D * d1, 0.593103448275862D * d2));
    this.three.getElements().add(new CubicCurveTo(0.7674418604651163D * d1, 0.6344827586206897D * d2, 0.7674418604651163D * d1, 0.6758620689655173D * d2, 0.7674418604651163D * d1, 0.6896551724137931D * d2));
    this.three.getElements().add(new CubicCurveTo(0.7674418604651163D * d1, 0.7172413793103448D * d2, 0.7558139534883721D * d1, 0.7448275862068966D * d2, 0.7325581395348837D * d1, 0.7655172413793103D * d2));
    this.three.getElements().add(new CubicCurveTo(0.7093023255813954D * d1, 0.7862068965517242D * d2, 0.686046511627907D * d1, 0.8068965517241379D * d2, 0.6395348837209303D * d1, 0.8275862068965517D * d2));
    this.three.getElements().add(new CubicCurveTo(0.5930232558139535D * d1, 0.8413793103448276D * d2, 0.5116279069767442D * d1, 0.8482758620689655D * d2, 0.5116279069767442D * d1, 0.8482758620689655D * d2));
    this.three.getElements().add(new CubicCurveTo(0.5D * d1, 0.8482758620689655D * d2, 0.45348837209302323D * d1, 0.8482758620689655D * d2, 0.45348837209302323D * d1, 0.8482758620689655D * d2));
    this.three.getElements().add(new CubicCurveTo(0.3953488372093023D * d1, 0.8482758620689655D * d2, 0.32558139534883723D * d1, 0.8275862068965517D * d2, 0.29069767441860467D * d1, 0.8068965517241379D * d2));
    this.three.getElements().add(new CubicCurveTo(0.2558139534883721D * d1, 0.7931034482758621D * d2, 0.23255813953488372D * d1, 0.7655172413793103D * d2, 0.23255813953488372D * d1, 0.7655172413793103D * d2));
    this.three.setFill(null);
    this.three.setStroke(localColor);
    this.six.getElements().clear();
    this.six.setFillRule(FillRule.EVEN_ODD);
    this.six.getElements().add(new MoveTo(0.5232558139534884D * d1, 0.2827586206896552D * d2));
    this.six.getElements().add(new LineTo(0.27906976744186046D * d1, 0.5793103448275863D * d2));
    this.six.getElements().add(new MoveTo(0.22093023255813954D * d1, 0.6758620689655173D * d2));
    this.six.getElements().add(new CubicCurveTo(0.22093023255813954D * d1, 0.5862068965517241D * d2, 0.3488372093023256D * d1, 0.5103448275862069D * d2, 0.5116279069767442D * d1, 0.5103448275862069D * d2));
    this.six.getElements().add(new CubicCurveTo(0.6627906976744186D * d1, 0.5103448275862069D * d2, 0.7906976744186046D * d1, 0.5862068965517241D * d2, 0.7906976744186046D * d1, 0.6758620689655173D * d2));
    this.six.getElements().add(new CubicCurveTo(0.7906976744186046D * d1, 0.7655172413793103D * d2, 0.6627906976744186D * d1, 0.8413793103448276D * d2, 0.5116279069767442D * d1, 0.8413793103448276D * d2));
    this.six.getElements().add(new CubicCurveTo(0.3488372093023256D * d1, 0.8413793103448276D * d2, 0.22093023255813954D * d1, 0.7655172413793103D * d2, 0.22093023255813954D * d1, 0.6758620689655173D * d2));
    this.six.getElements().add(new ClosePath());
    this.six.setFill(null);
    this.six.setStroke(localColor);
    this.four.getElements().clear();
    this.four.setFillRule(FillRule.EVEN_ODD);
    this.four.getElements().add(new MoveTo(0.7790697674418605D * d1, 0.6827586206896552D * d2));
    this.four.getElements().add(new LineTo(0.2441860465116279D * d1, 0.6827586206896552D * d2));
    this.four.getElements().add(new CubicCurveTo(0.2441860465116279D * d1, 0.6827586206896552D * d2, 0.23255813953488372D * d1, 0.6758620689655173D * d2, 0.22093023255813954D * d1, 0.6758620689655173D * d2));
    this.four.getElements().add(new CubicCurveTo(0.19767441860465115D * d1, 0.6689655172413793D * d2, 0.19767441860465115D * d1, 0.6689655172413793D * d2, 0.20930232558139536D * d1, 0.6620689655172414D * d2));
    this.four.getElements().add(new CubicCurveTo(0.20930232558139536D * d1, 0.6551724137931034D * d2, 0.6046511627906976D * d1, 0.30344827586206896D * d2, 0.6046511627906976D * d1, 0.30344827586206896D * d2));
    this.four.getElements().add(new LineTo(0.6046511627906976D * d1, 0.8482758620689655D * d2));
    this.four.setFill(null);
    this.four.setStroke(localColor);
    this.nine.getElements().clear();
    this.nine.setFillRule(FillRule.EVEN_ODD);
    this.nine.getElements().add(new MoveTo(0.5465116279069767D * d1, 0.8620689655172413D * d2));
    this.nine.getElements().add(new LineTo(0.7674418604651163D * d1, 0.5310344827586206D * d2));
    this.nine.getElements().add(new MoveTo(0.23255813953488372D * d1, 0.46206896551724136D * d2));
    this.nine.getElements().add(new CubicCurveTo(0.23255813953488372D * d1, 0.3724137931034483D * d2, 0.36046511627906974D * d1, 0.296551724137931D * d2, 0.5116279069767442D * d1, 0.296551724137931D * d2));
    this.nine.getElements().add(new CubicCurveTo(0.6627906976744186D * d1, 0.296551724137931D * d2, 0.7906976744186046D * d1, 0.3724137931034483D * d2, 0.7906976744186046D * d1, 0.46206896551724136D * d2));
    this.nine.getElements().add(new CubicCurveTo(0.7906976744186046D * d1, 0.5517241379310345D * d2, 0.6627906976744186D * d1, 0.6275862068965518D * d2, 0.5116279069767442D * d1, 0.6275862068965518D * d2));
    this.nine.getElements().add(new CubicCurveTo(0.36046511627906974D * d1, 0.6275862068965518D * d2, 0.23255813953488372D * d1, 0.5517241379310345D * d2, 0.23255813953488372D * d1, 0.46206896551724136D * d2));
    this.nine.getElements().add(new ClosePath());
    this.nine.setFill(null);
    this.nine.setStroke(localColor);
    this.five.getElements().clear();
    this.five.setFillRule(FillRule.EVEN_ODD);
    this.five.getElements().add(new MoveTo(0.7093023255813954D * d1, 0.32413793103448274D * d2));
    this.five.getElements().add(new LineTo(0.313953488372093D * d1, 0.32413793103448274D * d2));
    this.five.getElements().add(new LineTo(0.26744186046511625D * d1, 0.5655172413793104D * d2));
    this.five.getElements().add(new CubicCurveTo(0.26744186046511625D * d1, 0.5655172413793104D * d2, 0.29069767441860467D * d1, 0.5655172413793104D * d2, 0.29069767441860467D * d1, 0.5655172413793104D * d2));
    this.five.getElements().add(new CubicCurveTo(0.3488372093023256D * d1, 0.5448275862068965D * d2, 0.4069767441860465D * d1, 0.5310344827586206D * d2, 0.4418604651162791D * d1, 0.5310344827586206D * d2));
    this.five.getElements().add(new CubicCurveTo(0.4883720930232558D * d1, 0.5241379310344828D * d2, 0.5116279069767442D * d1, 0.5241379310344828D * d2, 0.5465116279069767D * d1, 0.5310344827586206D * d2));
    this.five.getElements().add(new CubicCurveTo(0.6162790697674418D * d1, 0.5379310344827586D * d2, 0.686046511627907D * d1, 0.5793103448275863D * d2, 0.6976744186046512D * d1, 0.593103448275862D * d2));
    this.five.getElements().add(new CubicCurveTo(0.7209302325581395D * d1, 0.6068965517241379D * d2, 0.7441860465116279D * d1, 0.6413793103448275D * d2, 0.7558139534883721D * d1, 0.6482758620689655D * d2));
    this.five.getElements().add(new CubicCurveTo(0.7558139534883721D * d1, 0.6620689655172414D * d2, 0.7674418604651163D * d1, 0.696551724137931D * d2, 0.7674418604651163D * d1, 0.696551724137931D * d2));
    this.five.getElements().add(new CubicCurveTo(0.7674418604651163D * d1, 0.7172413793103448D * d2, 0.7441860465116279D * d1, 0.7448275862068966D * d2, 0.7441860465116279D * d1, 0.7448275862068966D * d2));
    this.five.getElements().add(new CubicCurveTo(0.7441860465116279D * d1, 0.7586206896551724D * d2, 0.7093023255813954D * d1, 0.7931034482758621D * d2, 0.7093023255813954D * d1, 0.7931034482758621D * d2));
    this.five.getElements().add(new CubicCurveTo(0.6976744186046512D * d1, 0.8068965517241379D * d2, 0.6395348837209303D * d1, 0.8275862068965517D * d2, 0.6395348837209303D * d1, 0.8275862068965517D * d2));
    this.five.getElements().add(new CubicCurveTo(0.5697674418604651D * d1, 0.8482758620689655D * d2, 0.47674418604651164D * d1, 0.8482758620689655D * d2, 0.47674418604651164D * d1, 0.8482758620689655D * d2));
    this.five.getElements().add(new CubicCurveTo(0.3953488372093023D * d1, 0.8482758620689655D * d2, 0.3372093023255814D * d1, 0.8206896551724138D * d2, 0.3372093023255814D * d1, 0.8206896551724138D * d2));
    this.five.getElements().add(new CubicCurveTo(0.3023255813953488D * d1, 0.8137931034482758D * d2, 0.26744186046511625D * d1, 0.7862068965517242D * d2, 0.26744186046511625D * d1, 0.7862068965517242D * d2));
    this.five.getElements().add(new CubicCurveTo(0.2441860465116279D * d1, 0.7724137931034483D * d2, 0.23255813953488372D * d1, 0.7517241379310344D * d2, 0.23255813953488372D * d1, 0.7517241379310344D * d2));
    this.five.setFill(null);
    this.five.setStroke(localColor);
    this.eight.getElements().clear();
    this.eight.setFillRule(FillRule.EVEN_ODD);
    this.eight.getElements().add(new MoveTo(0.20930232558139536D * d1, 0.7034482758620689D * d2));
    this.eight.getElements().add(new CubicCurveTo(0.20930232558139536D * d1, 0.6137931034482759D * d2, 0.3372093023255814D * d1, 0.5448275862068965D * d2, 0.5D * d1, 0.5448275862068965D * d2));
    this.eight.getElements().add(new CubicCurveTo(0.6627906976744186D * d1, 0.5448275862068965D * d2, 0.7906976744186046D * d1, 0.6137931034482759D * d2, 0.7906976744186046D * d1, 0.7034482758620689D * d2));
    this.eight.getElements().add(new CubicCurveTo(0.7906976744186046D * d1, 0.7862068965517242D * d2, 0.6627906976744186D * d1, 0.8551724137931035D * d2, 0.5D * d1, 0.8551724137931035D * d2));
    this.eight.getElements().add(new CubicCurveTo(0.3372093023255814D * d1, 0.8551724137931035D * d2, 0.20930232558139536D * d1, 0.7862068965517242D * d2, 0.20930232558139536D * d1, 0.7034482758620689D * d2));
    this.eight.getElements().add(new ClosePath());
    this.eight.getElements().add(new MoveTo(0.26744186046511625D * d1, 0.4206896551724138D * d2));
    this.eight.getElements().add(new CubicCurveTo(0.26744186046511625D * d1, 0.3448275862068966D * d2, 0.37209302325581395D * d1, 0.2896551724137931D * d2, 0.5116279069767442D * d1, 0.2896551724137931D * d2));
    this.eight.getElements().add(new CubicCurveTo(0.6511627906976745D * d1, 0.2896551724137931D * d2, 0.7558139534883721D * d1, 0.3448275862068966D * d2, 0.7558139534883721D * d1, 0.4206896551724138D * d2));
    this.eight.getElements().add(new CubicCurveTo(0.7558139534883721D * d1, 0.4896551724137931D * d2, 0.6511627906976745D * d1, 0.5448275862068965D * d2, 0.5116279069767442D * d1, 0.5448275862068965D * d2));
    this.eight.getElements().add(new CubicCurveTo(0.37209302325581395D * d1, 0.5448275862068965D * d2, 0.26744186046511625D * d1, 0.4896551724137931D * d2, 0.26744186046511625D * d1, 0.4206896551724138D * d2));
    this.eight.getElements().add(new ClosePath());
    this.eight.setFill(null);
    this.eight.setStroke(localColor);
    this.seven.getElements().clear();
    this.seven.setFillRule(FillRule.EVEN_ODD);
    this.seven.getElements().add(new MoveTo(0.22093023255813954D * d1, 0.30344827586206896D * d2));
    this.seven.getElements().add(new LineTo(0.7906976744186046D * d1, 0.296551724137931D * d2));
    this.seven.getElements().add(new LineTo(0.4883720930232558D * d1, 0.8620689655172413D * d2));
    this.seven.setFill(null);
    this.seven.setStroke(localColor);
    this.numbers.getChildren().addAll(new Node[] { this.one, this.zero, this.two, this.three, this.six, this.four, this.nine, this.five, this.eight, this.seven });
  }
  
  private final void drawTube()
  {
    double d1 = this.control.getPrefWidth();
    double d2 = this.control.getPrefHeight();
    this.tube.getChildren().clear();
    Rectangle localRectangle = new Rectangle(0.0D, 0.0D, d1, d2);
    localRectangle.setOpacity(0.0D);
    localRectangle.setStroke(null);
    this.tube.getChildren().add(localRectangle);
    this.hatch = new Path();
    this.hatch.setFillRule(FillRule.EVEN_ODD);
    this.hatch.getElements().add(new MoveTo(0.8372093023255814D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.8758620689655172D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7674418604651163D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.8758620689655172D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6976744186046512D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.8758620689655172D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.627906976744186D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.8758620689655172D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5581395348837209D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.8758620689655172D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4883720930232558D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.8758620689655172D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4186046511627907D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.8758620689655172D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.3488372093023256D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.8758620689655172D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.27906976744186046D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.8758620689655172D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.20930232558139536D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.8758620689655172D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.8620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.8413793103448276D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.8275862068965517D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.8023255813953488D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.8344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7325581395348837D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.8344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6627906976744186D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.8344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5930232558139535D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.8344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5232558139534884D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.8344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.45348837209302323D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.8344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.38372093023255816D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.8344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.313953488372093D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.8344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.2441860465116279D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.8344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.1744186046511628D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.8344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.8206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.8D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.7862068965517242D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.8372093023255814D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.7931034482758621D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7674418604651163D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.7931034482758621D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6976744186046512D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.7931034482758621D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.627906976744186D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.7931034482758621D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5581395348837209D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.7931034482758621D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4883720930232558D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.7931034482758621D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4186046511627907D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.7931034482758621D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.3488372093023256D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.7931034482758621D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.27906976744186046D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.7931034482758621D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.20930232558139536D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.7931034482758621D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.7793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.7586206896551724D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.7448275862068966D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.8023255813953488D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.7517241379310344D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7325581395348837D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.7517241379310344D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6627906976744186D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.7517241379310344D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5930232558139535D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.7517241379310344D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5232558139534884D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.7517241379310344D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.45348837209302323D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.7517241379310344D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.38372093023255816D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.7517241379310344D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.313953488372093D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.7517241379310344D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.2441860465116279D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.7517241379310344D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.1744186046511628D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.7517241379310344D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.7379310344827587D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.7172413793103448D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.7034482758620689D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.8372093023255814D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.7103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7674418604651163D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.7103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6976744186046512D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.7103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.627906976744186D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.7103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5581395348837209D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.7103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4883720930232558D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.7103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4186046511627907D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.7103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.3488372093023256D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.7103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.27906976744186046D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.7103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.20930232558139536D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.7103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.696551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.6758620689655173D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.6620689655172414D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.8023255813953488D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.6689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7325581395348837D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.6689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6627906976744186D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.6689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5930232558139535D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.6689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5232558139534884D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.6689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.45348837209302323D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.6689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.38372093023255816D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.6689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.313953488372093D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.6689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.2441860465116279D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.6689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.1744186046511628D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.6689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.6551724137931034D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.6344827586206897D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.6206896551724138D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.8372093023255814D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.6275862068965518D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7674418604651163D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.6275862068965518D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6976744186046512D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.6275862068965518D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.627906976744186D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.6275862068965518D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5581395348837209D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.6275862068965518D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4883720930232558D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.6275862068965518D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4186046511627907D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.6275862068965518D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.3488372093023256D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.6275862068965518D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.27906976744186046D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.6275862068965518D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.20930232558139536D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.6275862068965518D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.6137931034482759D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.593103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.5793103448275863D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.8023255813953488D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.5862068965517241D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7325581395348837D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.5862068965517241D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6627906976744186D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.5862068965517241D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5930232558139535D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.5862068965517241D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5232558139534884D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.5862068965517241D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.45348837209302323D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.5862068965517241D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.38372093023255816D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.5862068965517241D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.313953488372093D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.5862068965517241D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.2441860465116279D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.5862068965517241D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.1744186046511628D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.5862068965517241D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.5724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.5517241379310345D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.5379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.8372093023255814D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.5448275862068965D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7674418604651163D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.5448275862068965D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6976744186046512D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.5448275862068965D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.627906976744186D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.5448275862068965D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5581395348837209D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.5448275862068965D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4883720930232558D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.5448275862068965D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4186046511627907D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.5448275862068965D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.3488372093023256D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.5448275862068965D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.27906976744186046D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.5448275862068965D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.20930232558139536D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.5448275862068965D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.5310344827586206D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.5103448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.496551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.8023255813953488D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.503448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7325581395348837D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.503448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6627906976744186D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.503448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5930232558139535D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.503448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5232558139534884D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.503448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.45348837209302323D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.503448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.38372093023255816D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.503448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.313953488372093D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.503448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.2441860465116279D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.503448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.1744186046511628D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.503448275862069D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.4896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.4689655172413793D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.45517241379310347D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.8372093023255814D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.46206896551724136D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7674418604651163D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.46206896551724136D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6976744186046512D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.46206896551724136D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.627906976744186D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.46206896551724136D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5581395348837209D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.46206896551724136D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4883720930232558D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.46206896551724136D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4186046511627907D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.46206896551724136D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.3488372093023256D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.46206896551724136D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.27906976744186046D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.46206896551724136D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.20930232558139536D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.46206896551724136D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.4482758620689655D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.42758620689655175D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.41379310344827586D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.8023255813953488D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.4206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7325581395348837D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.4206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6627906976744186D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.4206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5930232558139535D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.4206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5232558139534884D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.4206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.45348837209302323D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.4206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.38372093023255816D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.4206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.313953488372093D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.4206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.2441860465116279D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.4206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.1744186046511628D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.4206896551724138D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.4068965517241379D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.38620689655172413D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.3724137931034483D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.8372093023255814D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.872093023255814D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.3793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7674418604651163D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.3793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6976744186046512D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.3793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.627906976744186D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.3793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5581395348837209D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.3793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4883720930232558D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.3793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.4186046511627907D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.3793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.3488372093023256D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.3793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.27906976744186046D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.3793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.20930232558139536D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.3793103448275862D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.36551724137931035D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.3448275862068966D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.3310344827586207D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.8023255813953488D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.8372093023255814D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.33793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.8023255813953488D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.7325581395348837D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.7674418604651163D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.33793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.7325581395348837D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.6627906976744186D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.6976744186046512D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.33793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.6627906976744186D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5930232558139535D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.627906976744186D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.33793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.5930232558139535D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.5232558139534884D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.5581395348837209D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.33793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.5232558139534884D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.45348837209302323D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.4883720930232558D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.33793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.45348837209302323D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.38372093023255816D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.4186046511627907D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.33793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.38372093023255816D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.313953488372093D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.3488372093023256D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.33793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.313953488372093D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.2441860465116279D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.27906976744186046D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.33793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.2441860465116279D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.getElements().add(new MoveTo(0.1744186046511628D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.20930232558139536D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.33793103448275863D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.32413793103448274D * d2));
    this.hatch.getElements().add(new LineTo(0.13953488372093023D * d1, 0.30344827586206896D * d2));
    this.hatch.getElements().add(new LineTo(0.1744186046511628D * d1, 0.2896551724137931D * d2));
    this.hatch.getElements().add(new ClosePath());
    this.hatch.setFill(Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.05D));
    this.hatch.setStroke(Color.color(0.2D, 0.2D, 0.2D, 0.5D));
    this.hatch.setEffect(this.hatchGlow);
    this.tube.getChildren().addAll(new Node[] { this.hatch });
    this.tube.setCache(true);
    continueTube(this.tube, d1, d2);
  }
  
  private void continueTube(Group paramGroup, double paramDouble1, double paramDouble2)
  {
    Path localPath1 = new Path();
    localPath1.setFillRule(FillRule.EVEN_ODD);
    localPath1.getElements().add(new MoveTo(0.7906976744186046D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.8023255813953488D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.8023255813953488D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.7906976744186046D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.7906976744186046D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new ClosePath());
    localPath1.getElements().add(new MoveTo(0.7325581395348837D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.7441860465116279D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.7441860465116279D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.7325581395348837D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.7325581395348837D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new ClosePath());
    localPath1.getElements().add(new MoveTo(0.6744186046511628D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.686046511627907D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.686046511627907D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.6744186046511628D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.6744186046511628D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new ClosePath());
    localPath1.getElements().add(new MoveTo(0.6162790697674418D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.627906976744186D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.627906976744186D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.6162790697674418D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.6162790697674418D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new ClosePath());
    localPath1.getElements().add(new MoveTo(0.5581395348837209D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.5697674418604651D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.5697674418604651D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.5581395348837209D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.5581395348837209D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new ClosePath());
    localPath1.getElements().add(new MoveTo(0.5D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.5116279069767442D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.5116279069767442D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.5D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.5D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new ClosePath());
    localPath1.getElements().add(new MoveTo(0.4418604651162791D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.45348837209302323D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.45348837209302323D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.4418604651162791D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.4418604651162791D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new ClosePath());
    localPath1.getElements().add(new MoveTo(0.38372093023255816D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.3953488372093023D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.3953488372093023D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.38372093023255816D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.38372093023255816D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new ClosePath());
    localPath1.getElements().add(new MoveTo(0.32558139534883723D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.3372093023255814D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.3372093023255814D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.32558139534883723D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.32558139534883723D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new ClosePath());
    localPath1.getElements().add(new MoveTo(0.26744186046511625D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.27906976744186046D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.27906976744186046D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.26744186046511625D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.26744186046511625D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new ClosePath());
    localPath1.getElements().add(new MoveTo(0.20930232558139536D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.22093023255813954D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.22093023255813954D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.20930232558139536D * paramDouble1, 0.9379310344827586D * paramDouble2));
    localPath1.getElements().add(new LineTo(0.20930232558139536D * paramDouble1, 0.8689655172413793D * paramDouble2));
    localPath1.getElements().add(new ClosePath());
    localPath1.setFill(null);
    localPath1.setStroke(Color.color(0.35D, 0.35D, 0.35D, 0.3D));
    Path localPath2 = new Path();
    localPath2.setFillRule(FillRule.EVEN_ODD);
    localPath2.getElements().add(new MoveTo(0.0D, 0.35172413793103446D * paramDouble2));
    localPath2.getElements().add(new CubicCurveTo(0.0D, 0.35172413793103446D * paramDouble2, 0.0D, 0.8827586206896552D * paramDouble2, 0.0D, 0.8827586206896552D * paramDouble2));
    localPath2.getElements().add(new CubicCurveTo(0.0D, 0.9448275862068966D * paramDouble2, 0.09302325581395349D * paramDouble1, paramDouble2, 0.20930232558139536D * paramDouble1, paramDouble2));
    localPath2.getElements().add(new CubicCurveTo(0.20930232558139536D * paramDouble1, paramDouble2, 0.8023255813953488D * paramDouble1, paramDouble2, 0.8023255813953488D * paramDouble1, paramDouble2));
    localPath2.getElements().add(new CubicCurveTo(0.9069767441860465D * paramDouble1, paramDouble2, paramDouble1, 0.9448275862068966D * paramDouble2, paramDouble1, 0.8827586206896552D * paramDouble2));
    localPath2.getElements().add(new CubicCurveTo(paramDouble1, 0.8827586206896552D * paramDouble2, paramDouble1, 0.35172413793103446D * paramDouble2, paramDouble1, 0.35172413793103446D * paramDouble2));
    localPath2.getElements().add(new CubicCurveTo(paramDouble1, 0.2D * paramDouble2, 0.813953488372093D * paramDouble1, 0.07586206896551724D * paramDouble2, 0.5697674418604651D * paramDouble1, 0.05517241379310345D * paramDouble2));
    localPath2.getElements().add(new CubicCurveTo(0.5697674418604651D * paramDouble1, 0.027586206896551724D * paramDouble2, 0.5348837209302325D * paramDouble1, 0.0D, 0.5D * paramDouble1, 0.0D));
    localPath2.getElements().add(new CubicCurveTo(0.46511627906976744D * paramDouble1, 0.0D, 0.43023255813953487D * paramDouble1, 0.027586206896551724D * paramDouble2, 0.43023255813953487D * paramDouble1, 0.05517241379310345D * paramDouble2));
    localPath2.getElements().add(new CubicCurveTo(0.18604651162790697D * paramDouble1, 0.07586206896551724D * paramDouble2, 0.0D, 0.2D * paramDouble2, 0.0D, 0.35172413793103446D * paramDouble2));
    localPath2.getElements().add(new ClosePath());
    LinearGradient localLinearGradient1 = new LinearGradient(0.011627906976744186D * paramDouble1, 0.5655172413793104D * paramDouble2, 0.9883720930232558D * paramDouble1, 0.5655172413793104D * paramDouble2, false, CycleMethod.NO_CYCLE, new Stop[] { new Stop(0.0D, Color.color(0.0D, 0.0D, 0.0D, 0.6D)), new Stop(0.06D, Color.color(0.0D, 0.0D, 0.0D, 0.4D)), new Stop(0.07D, Color.color(0.0D, 0.0D, 0.0D, 0.3921568627D)), new Stop(0.35D, Color.color(0.0D, 0.0D, 0.0D, 0.2D)), new Stop(0.36D, Color.color(0.0D, 0.0D, 0.0D, 0.2D)), new Stop(0.66D, Color.color(0.0D, 0.0D, 0.0D, 0.2D)), new Stop(0.66010004D, Color.color(0.0D, 0.0D, 0.0D, 0.2D)), new Stop(0.92D, Color.color(0.0D, 0.0D, 0.0D, 0.5098039216D)), new Stop(1.0D, Color.color(0.0D, 0.0D, 0.0D, 0.6D)) });
    localPath2.setFill(localLinearGradient1);
    localPath2.setStroke(null);
    InnerShadow localInnerShadow = new InnerShadow();
    localInnerShadow.setWidth(0.16744186046511628D * localPath2.getLayoutBounds().getWidth());
    localInnerShadow.setHeight(0.16744186046511628D * localPath2.getLayoutBounds().getHeight());
    localInnerShadow.setOffsetX(0.0D);
    localInnerShadow.setOffsetY(0.0D);
    localInnerShadow.setRadius(0.16744186046511628D * localPath2.getLayoutBounds().getWidth());
    localInnerShadow.setColor(Color.BLACK);
    localInnerShadow.setBlurType(BlurType.GAUSSIAN);
    localInnerShadow.inputProperty().set(null);
    localPath2.setEffect(localInnerShadow);
    Rectangle localRectangle = new Rectangle(0.13953488372093023D * paramDouble1, 0.2620689655172414D * paramDouble2, 0.7209302325581395D * paramDouble1, 0.013793103448275862D * paramDouble2);
    localRectangle.getStyleClass().add("tube-hl-middle");
    Path localPath3 = new Path();
    localPath3.setFillRule(FillRule.EVEN_ODD);
    localPath3.getElements().add(new MoveTo(0.18604651162790697D * paramDouble1, 0.2689655172413793D * paramDouble2));
    localPath3.getElements().add(new CubicCurveTo(0.18604651162790697D * paramDouble1, 0.2689655172413793D * paramDouble2, 0.09302325581395349D * paramDouble1, 0.2689655172413793D * paramDouble2, 0.09302325581395349D * paramDouble1, 0.2689655172413793D * paramDouble2));
    localPath3.getElements().add(new CubicCurveTo(0.046511627906976744D * paramDouble1, 0.27586206896551724D * paramDouble2, 0.023255813953488372D * paramDouble1, 0.2827586206896552D * paramDouble2, 0.023255813953488372D * paramDouble1, 0.30344827586206896D * paramDouble2));
    localPath3.getElements().add(new CubicCurveTo(0.023255813953488372D * paramDouble1, 0.3103448275862069D * paramDouble2, 0.023255813953488372D * paramDouble1, 0.9103448275862069D * paramDouble2, 0.023255813953488372D * paramDouble1, 0.9103448275862069D * paramDouble2));
    localPath3.getElements().add(new CubicCurveTo(0.023255813953488372D * paramDouble1, 0.9241379310344827D * paramDouble2, 0.046511627906976744D * paramDouble1, 0.9310344827586207D * paramDouble2, 0.046511627906976744D * paramDouble1, 0.9310344827586207D * paramDouble2));
    localPath3.getElements().add(new CubicCurveTo(0.046511627906976744D * paramDouble1, 0.9310344827586207D * paramDouble2, 0.13953488372093023D * paramDouble1, 0.9310344827586207D * paramDouble2, 0.13953488372093023D * paramDouble1, 0.9310344827586207D * paramDouble2));
    localPath3.getElements().add(new CubicCurveTo(0.16279069767441862D * paramDouble1, 0.9310344827586207D * paramDouble2, 0.1744186046511628D * paramDouble1, 0.9103448275862069D * paramDouble2, 0.1744186046511628D * paramDouble1, 0.9103448275862069D * paramDouble2));
    localPath3.getElements().add(new CubicCurveTo(0.1744186046511628D * paramDouble1, 0.9103448275862069D * paramDouble2, 0.1744186046511628D * paramDouble1, 0.31724137931034485D * paramDouble2, 0.1744186046511628D * paramDouble1, 0.31724137931034485D * paramDouble2));
    localPath3.getElements().add(new CubicCurveTo(0.1744186046511628D * paramDouble1, 0.2896551724137931D * paramDouble2, 0.18604651162790697D * paramDouble1, 0.2689655172413793D * paramDouble2, 0.18604651162790697D * paramDouble1, 0.2689655172413793D * paramDouble2));
    localPath3.getElements().add(new ClosePath());
    localPath3.getStyleClass().add("tube-hl-left");
    Path localPath4 = new Path();
    localPath4.setFillRule(FillRule.EVEN_ODD);
    localPath4.getElements().add(new MoveTo(0.8604651162790697D * paramDouble1, 0.2689655172413793D * paramDouble2));
    localPath4.getElements().add(new CubicCurveTo(0.8837209302325582D * paramDouble1, 0.27586206896551724D * paramDouble2, 0.8953488372093024D * paramDouble1, 0.2896551724137931D * paramDouble2, 0.8953488372093024D * paramDouble1, 0.2896551724137931D * paramDouble2));
    localPath4.getElements().add(new CubicCurveTo(0.8953488372093024D * paramDouble1, 0.2896551724137931D * paramDouble2, 0.8953488372093024D * paramDouble1, 0.9172413793103448D * paramDouble2, 0.8953488372093024D * paramDouble1, 0.9172413793103448D * paramDouble2));
    localPath4.getElements().add(new CubicCurveTo(0.8953488372093024D * paramDouble1, 0.9241379310344827D * paramDouble2, 0.9302325581395349D * paramDouble1, 0.9310344827586207D * paramDouble2, 0.9302325581395349D * paramDouble1, 0.9310344827586207D * paramDouble2));
    localPath4.getElements().add(new CubicCurveTo(0.9651162790697675D * paramDouble1, 0.9310344827586207D * paramDouble2, 0.9651162790697675D * paramDouble1, 0.9172413793103448D * paramDouble2, 0.9651162790697675D * paramDouble1, 0.9172413793103448D * paramDouble2));
    localPath4.getElements().add(new CubicCurveTo(0.9651162790697675D * paramDouble1, 0.9172413793103448D * paramDouble2, 0.9651162790697675D * paramDouble1, 0.2896551724137931D * paramDouble2, 0.9651162790697675D * paramDouble1, 0.2896551724137931D * paramDouble2));
    localPath4.getElements().add(new CubicCurveTo(0.9651162790697675D * paramDouble1, 0.27586206896551724D * paramDouble2, 0.9302325581395349D * paramDouble1, 0.2689655172413793D * paramDouble2, 0.9302325581395349D * paramDouble1, 0.2689655172413793D * paramDouble2));
    localPath4.getElements().add(new CubicCurveTo(0.9302325581395349D * paramDouble1, 0.2689655172413793D * paramDouble2, 0.8604651162790697D * paramDouble1, 0.2689655172413793D * paramDouble2, 0.8604651162790697D * paramDouble1, 0.2689655172413793D * paramDouble2));
    localPath4.getElements().add(new ClosePath());
    localPath4.getStyleClass().add("tube-hl-right");
    Ellipse localEllipse1 = new Ellipse(0.5D * paramDouble1, 0.1482758620689655D * paramDouble2, 0.3023255813953488D * paramDouble1, 0.07241379310344828D * paramDouble2);
    localEllipse1.getStyleClass().add("tube-hl-upper");
    Ellipse localEllipse2 = new Ellipse(0.47674418604651164D * paramDouble1, 0.04482758620689655D * paramDouble2, 0.03488372093023256D * paramDouble1, 0.02413793103448276D * paramDouble2);
    localEllipse2.getStyleClass().add("tube-hl-top");
    this.leftLight = new Rectangle(0.0D, 0.32413793103448274D * paramDouble2, 0.011627906976744186D * paramDouble1, 0.5793103448275863D * paramDouble2);
    LinearGradient localLinearGradient2 = new LinearGradient(0.011627906976744186D * paramDouble1, 0.32413793103448274D * paramDouble2, 0.011627906976744245D * paramDouble1, 0.903448275862069D * paramDouble2, false, CycleMethod.NO_CYCLE, new Stop[] { new Stop(0.0D, Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.1D)), new Stop(0.5D, Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.4D)), new Stop(1.0D, Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.1D)) });
    this.leftLight.setFill(localLinearGradient2);
    this.leftLight.setStroke(null);
    this.rightLight = new Rectangle(0.9883720930232558D * paramDouble1, 0.32413793103448274D * paramDouble2, 0.011627906976744186D * paramDouble1, 0.5793103448275863D * paramDouble2);
    LinearGradient localLinearGradient3 = new LinearGradient(paramDouble1, 0.32413793103448274D * paramDouble2, paramDouble1, 0.903448275862069D * paramDouble2, false, CycleMethod.NO_CYCLE, new Stop[] { new Stop(0.0D, Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.1D)), new Stop(0.5D, Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.4D)), new Stop(1.0D, Color.color(this.control.getGlowColor().getRed(), this.control.getGlowColor().getGreen(), this.control.getGlowColor().getBlue(), 0.1D)) });
    this.rightLight.setFill(localLinearGradient3);
    this.rightLight.setStroke(null);
    paramGroup.getChildren().addAll(new Node[] { localPath1, localPath2, localRectangle, localPath3, localPath4, localEllipse1, localEllipse2, this.leftLight, this.rightLight });
    paramGroup.setCache(true);
  }
}


/* Location:              /home/ivaneyvieira/git/inventario/Inventario.jar!/jfxtras/labs/internal/scene/control/skin/NixieTubeSkin.class
 * Java compiler version: 7 (51.0)
 * JD-Core Version:       0.7.1
 */